[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio settings
asyncio_mode = auto

# Test running options
addopts = 
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --maxfail=10
    --cov=app
    --cov-report=term-missing
    --cov-report=html:coverage_html
    -p no:warnings
    --randomly-seed=1234
    --html=test-reports/report.html
    --self-contained-html

# Coverage settings
[coverage:run]
branch = True
source = app
omit = 
    */tests/*
    */migrations/*
    */site-packages/*
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise AssertionError

# Logging settings
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    api: marks tests as API tests
    ui: marks tests as UI tests
    data: marks tests as data-related tests
    async: marks tests as asynchronous tests

# Environment variables
env =
    TEST_ENV=test
    LOG_LEVEL=INFO
    PYTHONPATH=.

# Test directories to ignore
norecursedirs = 
    .git
    .tox
    .env
    dist
    build
    migrations
    node_modules

# Files to ignore
ignore = 
    setup.py
    docs/*
    *.pyc
    __pycache__

# Timeout settings
timeout = 300

# xfail_strict = True ensures that tests marked as xfail that actually pass will be reported as failures
xfail_strict = True

# Cache settings
cache_dir = .pytest_cache

# Terminal reporting settings
console_output_style = progress 